def gcd(a, b):
    while b:
        a, b = b, a % b
    return a


def euler_phi(n):
    result = 1
    p = 2
    while p*p <= n:
        if n%p==0:
            cnt = 0
            while n%p==0:
                n//=p
                cnt +=1
                result *= p**(cnt-1)*(p-1)
        p+=1
    if n>1:
        result *= n-1
    return result


def find_idempotents(n):
    idempotents = []
    phi_n = euler_phi(n)
    for i in range(1, n):
        if gcd(i,n) == 1 and pow(i,2,n) == i:
            idempotents.append(i)
    return idempotents


def find_max_order_elements(n):
    max_order = 1
    max_order_element = 1
    for i in range(2, n):
        order = euler_phi(i)
        if order > max_order:
            max_order = order
            max_order_element = i
    return max_order, max_order_element

n = 10

idempotents = find_idempotents(n)
print(n, idempotents)

max_order, max_order_element = find_max_order_elements(n)
print(n, max_order, max_order_element)
